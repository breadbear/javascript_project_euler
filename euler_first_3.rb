=begin
EULER # 1 PROBLEM: "If we list all the natural numbers below 10 that are multiples of 3 or 5,
we get 3, 5, 6, and 9. The sum of these multiples is 23. Find the sum of all multiples
of 3 or 5 below 1000."
=end

number = 1
track_sum = 0

while number < 1000
  if number % 3 == 0
    track_sum = track_sum + number
  elsif number % 5 == 0
    track_sum = track_sum + number
  end
  number = number + 1
end

puts "Euler 1: The sum of all multiples of 3 or 5 less than 1000 is #{track_sum}."

=begin
EULER # 2 PROBLEM: "Each new term in the Fibonacci sequence is generated by adding
the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed
four million, find the sum of the even-valued terms."
=end

a = 1
b = 2
c = 0
even_sum = 0

while a <= 4e6
  if a % 2 == 0
    even_sum += a
  end
  c = a + b
  a = b
  b = c
end

puts "Euler 2: The sum of the even-valued Fibonnaci numbers not greater than 4 million is #{even_sum}."

=begin
EULER # 3 PROBLEM: "The prime factors of 13195 are 5, 7, 13, and 29.

What is the largest prime factor of the number 600851475143?"
=end

#I really want to move on with the curriculum. So, builtins.

require 'prime'

cheap_answer = Prime.prime_division(600851475143).last[0]

puts "Euler 3: The largest prime factor of the number 600851475143 is #{cheap_answer}."
